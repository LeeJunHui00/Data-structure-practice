#include <iostream>
#include <string>

using namespace std;

class phoneData {
public:
	phoneData(string name, string phoneNumber, string address);
	void printPD();
	string name_;
	string phoneNumber_;
	string address_;
};

class phoneNode {
public:
	phoneNode(phoneData * data, phoneNode * next);
	phoneNode * next_;
	phoneData * data_;
};

class phoneBook {
public:
	phoneBook();
	bool Insert(phoneData * data);
	phoneData * Delete(string name);
	phoneData * Find(string name);
private:
	phoneNode * lst_;
};


phoneBook::phoneBook() {
	lst_ = 0;
}

bool
phoneBook::Insert(phoneData*data) {
	phoneNode*ptr = lst_;
	ptr = ptr->next_;
	ptr->next_ = new phoneNode(data, ptr->next_);
}


phoneData*phoneBook::Delete(string name) {
	phoneNode*ptr = lst_;
	if (lst_ == 0) {
		return;
	}
	if (lst_->data_ == name) {

	}
	while (ptr->next_ != 0 && ptr->next_->data_ != name) {

	}
}


phoneData*phoneBook::Find(string name) {

}


void
phoneData::printPD() {
}

int main() {
	phoneBook * pb = new phoneBook();
	phoneData * pd = new phoneData("누구나", "010-2345-6789", "동의대학교");
	pb->Insert(pd);
	pd = new phoneData("아무개", "010-9876-5432", "동의대학교");
	pb->Insert(pd);

	pd = pb->Find("누구나");
	if (pd) pd->printPD();

	pd = pb->Find("아무개");
	if (pd) pd->printPD();

	pb->Delete("아무개");

	pd = pb->Find("누구나");
	if (pd) pd->printPD();
	pd = pb->Find("아무개");
	if (pd) pd->printPD();
}
